// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: interactions.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

type BulkCreateInteractionsParams struct {
	Uri       string
	Kind      InteractionType
	AuthorDid string
	PostUri   string
	CreatedAt pgtype.Timestamp
}

const bulkDeleteInteractions = `-- name: BulkDeleteInteractions :many
DELETE
FROM interactions
WHERE uri = ANY ($1::VARCHAR[])
RETURNING uri, post_uri
`

type BulkDeleteInteractionsRow struct {
	Uri     string
	PostUri string
}

func (q *Queries) BulkDeleteInteractions(ctx context.Context, dollar_1 []string) ([]BulkDeleteInteractionsRow, error) {
	rows, err := q.db.Query(ctx, bulkDeleteInteractions, dollar_1)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []BulkDeleteInteractionsRow
	for rows.Next() {
		var i BulkDeleteInteractionsRow
		if err := rows.Scan(&i.Uri, &i.PostUri); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const deleteOldInteractions = `-- name: DeleteOldInteractions :exec
DELETE
FROM interactions
WHERE created_at < current_timestamp - interval '7 days'
`

func (q *Queries) DeleteOldInteractions(ctx context.Context) error {
	_, err := q.db.Exec(ctx, deleteOldInteractions)
	return err
}

const deleteUserInteractions = `-- name: DeleteUserInteractions :exec
DELETE
FROM interactions
WHERE author_did = $1
`

func (q *Queries) DeleteUserInteractions(ctx context.Context, authorDid string) error {
	_, err := q.db.Exec(ctx, deleteUserInteractions, authorDid)
	return err
}
