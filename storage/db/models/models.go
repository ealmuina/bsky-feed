// Code generated by "gocqlx/cmd/schemagen"; DO NOT EDIT.

package models

import (
	"github.com/scylladb/gocqlx/v3/table"
	"time"
)

// Table models.
var (
	Follows = table.New(table.Metadata{
		Name: "follows",
		Columns: []string{
			"author_did",
			"created_at",
			"subject_did",
			"uri",
		},
		PartKey: []string{
			"uri",
		},
		SortKey: []string{
			"subject_did",
			"created_at",
		},
	})

	Interactions = table.New(table.Metadata{
		Name: "interactions",
		Columns: []string{
			"author_did",
			"created_at",
			"kind",
			"post_uri",
			"uri",
		},
		PartKey: []string{
			"uri",
		},
		SortKey: []string{
			"post_uri",
			"created_at",
		},
	})

	Posts = table.New(table.Metadata{
		Name: "posts",
		Columns: []string{
			"author_did",
			"created_at",
			"language",
			"rank",
			"reply_parent",
			"reply_root",
			"uri",
		},
		PartKey: []string{
			"uri",
		},
		SortKey: []string{
			"language",
			"rank",
		},
	})

	SubscriptionState = table.New(table.Metadata{
		Name: "subscription_state",
		Columns: []string{
			"cursor",
			"service",
		},
		PartKey: []string{
			"service",
		},
		SortKey: []string{},
	})

	Users = table.New(table.Metadata{
		Name: "users",
		Columns: []string{
			"did",
			"handle",
			"last_update",
		},
		PartKey: []string{
			"did",
		},
		SortKey: []string{
			"last_update",
		},
	})

	UsersCounters = table.New(table.Metadata{
		Name: "users_counters",
		Columns: []string{
			"did",
			"followers_count",
			"follows_count",
			"posts_count",
		},
		PartKey: []string{
			"did",
		},
		SortKey: []string{},
	})
)

type FollowsStruct struct {
	AuthorDid  string
	CreatedAt  time.Time
	SubjectDid string
	Uri        string
}
type InteractionsStruct struct {
	AuthorDid string
	CreatedAt time.Time
	Kind      string
	PostUri   string
	Uri       string
}
type PostsStruct struct {
	AuthorDid   string
	CreatedAt   time.Time
	Language    string
	Rank        float64
	ReplyParent string
	ReplyRoot   string
	Uri         string
}
type SubscriptionStateStruct struct {
	Cursor  int64
	Service string
}
type UsersStruct struct {
	Did        string
	Handle     string
	LastUpdate time.Time
}
type UsersCountersStruct struct {
	Did            string
	FollowersCount int
	FollowsCount   int
	PostsCount     int
}
