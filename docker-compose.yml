services:
  api:
    build:
      context: .
    ports:
      - "3333:3333"
    volumes:
      - .:/app
    command: sh ./run.sh
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  db:
    image: scylladb/scylla
    environment:
      - "MAX_HEAP_SIZE=256M"
      - "HEAP_NEWSIZE=128M"
    healthcheck:
      test: [ "CMD", "cqlsh", "-u cassandra", "-p cassandra" ,"-e describe keyspaces" ]
      interval: 15s
      timeout: 10s
      retries: 10
    ports:
      - "9042:9042"
    volumes:
      - scylla_data:/var/lib/cassandra
      - ./storage/db/db_init:/docker-entrypoint-initdb.d
    restart: unless-stopped

  scylla-load-keyspace:
    container_name: scylla-load-keyspace
    image: scylladb/scylla
    volumes:
      - ./storage/db/db_init/schema.cql:/schema.cql
    command: /bin/bash -c "sleep 60 && cqlsh db -f /schema.cql"

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana.ini:/etc/grafana/grafana.ini
    restart: unless-stopped

volumes:
  scylla_data:
  redis_data:
  prometheus_data:
  grafana_data: